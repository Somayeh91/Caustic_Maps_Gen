from my_models import model_design_2l, model_design_3l, model_design_Unet, \
    basic_unet, model_design_Unet2, model_design_Unet3, model_design_Unet_NF, model_design_Unet_resnet, \
    model_design_Unet_resnet2, Unet_sobel_edges1, Unet_resnet_3param, VAE, \
    Unet_sobel_edges2, Unet_take_two_channels_separately, Unet_lens_pos, \
    kgs_to_bt, kgs_lens_pos_to_bt, bt_to_kgs
from loss_functions import tweedie_loss_func, \
    lc_loss_func, \
    custom_loss_func
import keras
import tensorflow as tf

directory_bulk = './../../../fred/oz108/skhakpas/'
len_pos_directory = './../data/all_maps_lens_pos.pkl'

best_AD_models_info = {'data': [['50x50', '25x25', '50x50', '50x50', '50x50', '50x50'],
                                ['3828', '12300', '12300', '12300', '12300', '12300'],
                                ['150', '50', '300', '300', '50', '300'],
                                ['1e-05', '1e-05', '1e-05', '1e-05', '1e-05', '0.0001'],
                                ['BCE-TW', 'BCE', 'BCE', 'BCE', 'BCE-KL', 'BCE-KL'],
                                ['8', '8', '16', '8', '8', '8']],
                       'job_names': [
                           '23-09-05-22-22-22',
                           '23-03-26-22-34-15',
                           '23-10-14-10-59-40',
                           '23-10-14-11-00-03',
                           '23-12-11-23-23-56',
                           '23-12-14-01-12-07'],
                       'job_model_filename': ['model_10000_8_1e-05',
                                              'model_10000_8_1e-05',
                                              'model_10000_16_1e-05',
                                              'model_10000_8_1e-05',
                                              'model_10000_8_1e-05',
                                              'model_10000_8_0.0001'],
                       'job_cost_labels': ['lc_bce',
                                           'bce',
                                           'bce',
                                           'bce',
                                           'custom',
                                           'custom'],
                       'LSR_layer_name': ['conv2d_6',
                                          'conv2d_8',
                                          'conv2d_6',
                                          'conv2d_6',
                                          'conv2d_6',
                                          'conv2d_6'],
                       'columns': ('trial 1', 'trial 2', 'trial 3', 'trial 4', 'trial 5', 'trial 6'),
                       'rows': ('LSR size', 'Input size', 'Epochs', 'LR', 'Loss', 'Batch')}

loss_functions = {'binary_crossentropy': keras.losses.BinaryCrossentropy(from_logits=True),
                  'poisson': keras.losses.Poisson(),
                  'tweedie': tweedie_loss_func(0.5),
                  'lc_loss': lc_loss_func('mse', 1),
                  'huber': tf.keras.losses.Huber(delta=1),
                  'custom': custom_loss_func()}
optimizers = {'adam': keras.optimizers.Adam,
              'sgd': keras.optimizers.SGD,
              'adamax': keras.optimizers.Adamax,
              'adadelta': keras.optimizers.Adadelta,
              'rmsprop': keras.optimizers.RMSprop}

model_parameters = {
    '2l': {
        'model_function': model_design_2l,
        'input_side': 1000,
        'input_side2': None,
        'input_output_format': 'norm_maps',
        'default_loss': loss_functions['binary_crossentropy'],
        'default_optimizer': optimizers['adam'],
        'n_channels': 1,
        'crop_scale': 1,
        'include_lens_pos': False,
        'include_map_units': False,
        'flow_label': None,
        'n_flows': 4,
        'z_size': 625,
        'first_down_sampling': 5
    },
    '3l': {
        'model_function': model_design_3l,
        'input_side': 1000,
        'input_side2': None,
        'input_output_format': 'norm_maps',
        'default_loss': loss_functions['binary_crossentropy'],
        'default_optimizer': optimizers['adam'],
        'n_channels': 1,
        'crop_scale': 1,
        'include_lens_pos': False,
        'include_map_units': False,
        'flow_label': None,
        'n_flows': 4,
        'z_size': 625,
        'first_down_sampling': 5
    },
    'Unet': {
        'model_function': model_design_Unet,
        'input_side': 1000,
        'input_side2': None,
        'input_output_format': 'norm_maps',
        'default_loss': loss_functions['binary_crossentropy'],
        'default_optimizer': optimizers['adam'],
        'n_channels': 1,
        'crop_scale': 1,
        'include_lens_pos': False,
        'include_map_units': False,
        'flow_label': None,
        'n_flows': 4,
        'z_size': 625,
        'first_down_sampling': 5
    },
    'Unet2': {
        'model_function': model_design_Unet2,
        'input_side': 1000,
        'input_side2': None,
        'input_output_format': 'norm_maps',
        'default_loss': loss_functions['custom'],
        'default_optimizer': optimizers['adam'],
        'n_channels': 1,
        'crop_scale': 1,
        'include_lens_pos': False,
        'include_map_units': False,
        'flow_label': None,
        'n_flows': 4,
        'z_size': 625,
        'first_down_sampling': 5
    },
    'Unet3': {
        'model_function': model_design_Unet3,
        'input_side': 1000,
        'input_side2': None,
        'input_output_format': 'norm_maps',
        'default_loss': loss_functions['binary_crossentropy'],
        'default_optimizer': optimizers['adam'],
        'n_channels': 1,
        'crop_scale': 1,
        'include_lens_pos': False,
        'include_map_units': False,
        'flow_label': None,
        'n_flows': 4,
        'z_size': 625,
        'first_down_sampling': 5
    },
    'basic_unet': {
        'model_function': basic_unet,
        'input_side': 1000,
        'input_side2': None,
        'input_output_format': 'norm_maps',
        'default_loss': loss_functions['binary_crossentropy'],
        'default_optimizer': optimizers['adam'],
        'n_channels': 1,
        'crop_scale': 1,
        'include_lens_pos': False,
        'include_map_units': False,
        'flow_label': None,
        'n_flows': 4,
        'z_size': 625,
        'first_down_sampling': 5
    },
    'Unet_NF': {
        'model_function': model_design_Unet_NF,
        'input_side': 1000,
        'input_side2': None,
        'input_output_format': 'norm_maps',
        'default_loss': loss_functions['binary_crossentropy'],
        'default_optimizer': optimizers['adam'],
        'n_channels': 1,
        'crop_scale': 1,
        'include_lens_pos': False,
        'include_map_units': False,
        'flow_label': None,
        'n_flows': 4,
        'z_size': 625,
        'first_down_sampling': 5
    },
    'Unet_sobel1': {
        'model_function': Unet_sobel_edges1,
        'input_side': 1000,
        'input_side2': None,
        'input_output_format': 'norm_maps',
        'default_loss': loss_functions['binary_crossentropy'],
        'default_optimizer': optimizers['adam'],
        'n_channels': 1,
        'crop_scale': 1,
        'include_lens_pos': False,
        'include_map_units': False,
        'flow_label': None,
        'n_flows': 4,
        'z_size': 625,
        'first_down_sampling': 5
    },
    'Unet_sobel2': {
        'model_function': Unet_sobel_edges2,
        'input_side': 1000,
        'input_side2': None,
        'input_output_format': 'norm_maps',
        'default_loss': loss_functions['binary_crossentropy'],
        'default_optimizer': optimizers['adam'],
        'n_channels': 1,
        'crop_scale': 1,
        'include_lens_pos': False,
        'include_map_units': False,
        'flow_label': None,
        'n_flows': 4,
        'z_size': 625,
        'first_down_sampling': 5
    },
    'Unet_resnet': {
        'model_function': model_design_Unet_resnet,
        'input_side': 1000,
        'input_side2': None,
        'input_output_format': 'norm_maps',
        'default_loss': loss_functions['binary_crossentropy'],
        'default_optimizer': optimizers['adam'],
        'n_channels': 1,
        'crop_scale': 1,
        'include_lens_pos': False,
        'include_map_units': False,
        'flow_label': None,
        'n_flows': 4,
        'z_size': 625,
        'first_down_sampling': 5
    },
    'Unet_resnet2': {
        'model_function': model_design_Unet_resnet2,
        'input_side': 1000,
        'input_side2': None,
        'input_output_format': 'norm_maps',
        'default_loss': loss_functions['binary_crossentropy'],
        'default_optimizer': optimizers['adam'],
        'n_channels': 1,
        'crop_scale': 1,
        'include_lens_pos': False,
        'include_map_units': False,
        'flow_label': None,
        'n_flows': 4,
        'z_size': 625,
        'first_down_sampling': 5
    },
    'VAE_Unet_Resnet': {
        'model_function': VAE,
        'input_side': 1000,
        'input_side2': None,
        'input_output_format': 'norm_maps',
        'default_loss': loss_functions['binary_crossentropy'],
        'default_optimizer': optimizers['adam'],
        'n_channels': 1,
        'crop_scale': 1,
        'include_lens_pos': False,
        'include_map_units': False,
        'flow_label': None,
        'n_flows': 4,
        'z_size': 625,
        'first_down_sampling': 5
    },
    'Unet_resnet_3param': {
        'model_function': Unet_resnet_3param,
        'input_side': 1000,
        'input_side2': 3,
        'input_output_format': 'norm_maps',
        'default_loss': loss_functions['binary_crossentropy'],
        'default_optimizer': optimizers['adam'],
        'n_channels': 1,
        'crop_scale': 1,
        'include_lens_pos': False,
        'include_map_units': False,
        'flow_label': None,
        'n_flows': 4,
        'z_size': 625,
        'first_down_sampling': 5
    },
    'Unet_2ch_input': {
        'model_function': Unet_take_two_channels_separately,
        'input_side': 1000,
        'input_side2': None,
        'input_output_format': 'norm_maps',
        'default_loss': loss_functions['binary_crossentropy'],
        'default_optimizer': optimizers['adam'],
        'n_channels': 1,
        'crop_scale': 1,
        'include_lens_pos': False,
        'include_map_units': False,
        'flow_label': None,
        'n_flows': 4,
        'z_size': 625,
        'first_down_sampling': 5
    },
    'Unet_lens_pos': {
        'model_function': Unet_lens_pos,
        'input_side': 1000,
        'input_side2': 50,
        'input_output_format': 'norm_maps',
        'default_loss': loss_functions['binary_crossentropy'],
        'default_optimizer': optimizers['adam'],
        'n_channels': 1,
        'crop_scale': 1,
        'include_lens_pos': False,
        'include_map_units': False,
        'flow_label': None,
        'n_flows': 4,
        'z_size': 625,
        'first_down_sampling': 5
    },
    'kgs_to_bt': {
        'model_function': kgs_to_bt,
        'input_side': 3,
        'input_side2': None,
        'input_output_format': 'norm_maps',
        'default_loss': loss_functions['binary_crossentropy'],
        'default_optimizer': optimizers['adam'],
        'n_channels': 1,
        'crop_scale': 1,
        'include_lens_pos': False,
        'include_map_units': False,
        'flow_label': None,
        'n_flows': 4,
        'z_size': 625,
        'first_down_sampling': 5
    },
    'bt_to_kgs': {
        'model_function': bt_to_kgs,
        'input_side': 50,
        'input_side2': None,
        'input_output_format': 'norm_maps',
        'default_loss': loss_functions['binary_crossentropy'],
        'default_optimizer': optimizers['adam'],
        'n_channels': 1,
        'crop_scale': 1,
        'include_lens_pos': False,
        'include_map_units': False,
        'flow_label': None,
        'n_flows': 4,
        'z_size': 625,
        'first_down_sampling': 5
    },
    'kgs_lens_pos_to_bt': {
        'model_function': kgs_lens_pos_to_bt,
        'input_side': 3,
        'input_side2': 20,
        'input_output_format': 'norm_maps',
        'default_loss': loss_functions['binary_crossentropy'],
        'default_optimizer': optimizers['adam'],
        'n_channels': 1,
        'crop_scale': 1,
        'include_lens_pos': True,
        'include_map_units': False,
        'flow_label': None,
        'n_flows': 4,
        'z_size': 625,
        'first_down_sampling': 5
    }
}

running_params = {'dim': 10000,
                  'batch_size': 8,
                  'n_epochs': 100,
                  'res_scale': 10,
                  'learning_rate': 0.00001,
                  'path': './../../../fred/oz108/GERLUMPH_project/DATABASES/gerlumph_db/',
                  'shuffle': True,
                  'conv_const': './../data/maps_selected_kappa_equal_gamma.csv',
                  'sample_size': 12342,
                  'test_selection': 'random',
                  'train_selection': 'random',
                  'output_dir': './../../../fred/oz108/skhakpas/results/',
                  'list_IDs_directory': './../data/ID_maps_selected_kappa_equal_gamma.dat',
                  'saved_model_path': None,
                  'saved_LSR_path': './../../../fred/oz108/skhakpas/results/23-12-14-01-12-07/LSR_23-12-14-01-12-07_samplesize_12342.npy',
                  'mode': 'train_test',
                  'n_test_set': 10,
                  'test_IDs': None,
                  'early_callback': None,
                  'evaluation_metric': 'ssm'}